{
  "adapter": "یک روش برنامه‌نویسی است که به شما این امکان را می‌دهد تا رابط یک کلاس را به یک رابط دیگر تبدیل کنید.",
  "bridge": "یک روش برنامه‌نویسی است که موجب جداسازی ارتباط بین یک کلاس و پیاده‌سازی آن می‌شود تا بتوان به صورت مستقل از هم آنها را تغییر داد.",
  "composite": "یک روش برنامه‌نویسی است که به شما این امکان را می‌دهد تا گروهی از اشیاء را به صورت یک اشیا ساده مدل کنید.",
  "decorator": "امکان افزودن ویژگی‌ها یا عملکردهای جدید به یک شیء را بدون تغییر کد مبدأ فراهم می‌کند. این الگو به شما اجازه می‌دهد به صورت پویا و برحسب نیاز، به یک شیء عملکرد جدیدی اضافه کنید.",
  "facade": "یک واسط ساده‌تر را برای دسترسی به یک زیرسیستم پیچیده‌تر فراهم می‌کند. این الگو به شما اجازه می‌دهد با استفاده از یک نقطه ورودی مشخص واجد همه پیچیدگی‌های زیرسیستم، با آن تعامل کنید.",
  "flyweight": "به شما اجازه می‌دهد اشتراک‌گذاری شیء‌ها را به منظور کاهش مصرف منابع در صورتی که شیء‌های مشابه بسیاری وجود داشته باشند، فراهم کند.",
  "proxy": "این الگو به شما امکان می‌دهد که با استفاده از نماینده، به یک شیء دسترسی کنید و کنترل اضافی را بر روی دسترسی‌ها اعمال کنید مانند اعمال محدودیت‌ها یا بررسی‌های امنیتی."
}